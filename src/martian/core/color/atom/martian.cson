fileTypes: [
  "mro"
]
name: "Martian"
patterns: [
  {
    match: "([^\\w]|^)(stage|pipeline)([^\\w]|$)"
    name: "storage.type"
  }
  {
    match: "([^\\w]|^)(@include|return|call|volatile|local|preflight|=)"
    name: "keyword.operator"
  }
  {
    match: "([^\\w]|^)(split using)([^\\w]|$)"
    name: "support.function"
  }
  {
    captures:
      "1":
        name: "entity.name.function"
    match: "(\\w+)\\s*\\("
    name: "function.martianlang"
  }
  {
    captures:
      "1":
        name: "keyword.operator"
      "2":
        name: "variable.parameter"
    match: "(filetype)\\s+(\\S+);"
    name: "function.martianlang"
  }
  {
    captures:
      "1":
        name: "storage.modifier"
      "2":
        name: "variable.parameter"
    match: "(in|out|src)\\s+(\\S+)"
    name: "function.martianlang"
  }
  {
    match: "\"[^\"]+\""
    name: "string.quoted.double"
  }
  {
    match: "\\#.*$"
    name: "comment.line"
  }
  {
    match: "(true|false)"
    name: "constant.language.boolean"
  }
  {
    match: "(null)"
    name: "constant.language.null"
  }
  {
    match: "[A-Za-z]\\w+"
  }
  {
    match: "-?\\d+(\\.\\d+)?"
    name: "constant.numeric"
  }
]
scopeName: "source.martianlang"
